<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
	namespace：必须与对应的接口全类名一致
	id:必须与对应接口的某个对应的方法名一致
	
 -->
<mapper namespace="cn.edu.neu.mapper.GoodsMapper">
    <select id="findNewGoods" resultType="Goods">
		select goods_id goodsId,cate_id cateId,goods_name goodsName,goods_price goodsPrice,
		goods_discount goodsDiscount,goods_stock goodsStock,goods_date goodsDate,goods_sales goodsSales,goods_pic goodsPic 
		from t_goods 
		order by goods_date desc limit 0,12
	</select>
	<select id="findSalesGoods" resultType="Goods">
		select goods_id goodsId,cate_id cateId,goods_name goodsName,goods_price goodsPrice,
		goods_discount goodsDiscount,goods_stock goodsStock,goods_date goodsDate,goods_sales goodsSales,goods_pic goodsPic 
		from t_goods 
		order by goods_sales desc limit 0,12
	</select>
    <select id="findGoodsByCate" resultType="Goods">
        select goods_id goodsId,goods_name goodsName,goods_price goodsPrice,goods_discount goodsDiscount,
        goods_sales goodsSales,goods_pic goodsPic from t_goods 
        <if test="params.cateId!=null">
        	where cate_id=#{params.cateId}
        </if>
        <if test="params.sort!=null">
		<choose>
		  <when test="params.sort ==1">
		    order by goods_discount
		  </when>
		  <when test="params.sort ==2">
		    order by goods_discount desc
		  </when>
		  <when test="params.sort ==3">
		    order by goods_sales desc
		  </when>
		  <when test="params.sort ==4">
		    order by goods_sales 
		  </when>
		  <otherwise>
		    order by goods_discount
		  </otherwise>
		</choose>
		</if>
		<if test="params.sort==null">
		     order by goods_discount
		</if>
        
    </select>
    
    <select id="findGoodsByKeyword" resultType="Goods">
		select goods_id goodsId,cate_id cateId,goods_name goodsName,goods_price goodsPrice,
		goods_discount goodsDiscount,goods_stock goodsStock,goods_date goodsDate,goods_sales goodsSales,goods_pic goodsPic
		from t_goods 
		<where>	    
		    goods_name like CONCAT(CONCAT('%', #{params.keyword}), '%') 
	    </where>
	    <if test="params.sort!=null">
		<choose>
		  <when test="params.sort ==1">
		    order by goods_discount
		  </when>
		  <when test="params.sort ==2">
		    order by goods_discount desc
		  </when>
		  <when test="params.sort ==3">
		    order by goods_sales desc
		  </when>
		  <when test="params.sort ==4">
		    order by goods_sales 
		  </when>
		  <otherwise>
		    order by goods_discount
		  </otherwise>
		</choose>
		</if>
		<if test="params.sort==null">
		     order by goods_discount
		</if>
	</select>
	
    <resultMap id="GoodsResultMap" type="Goods">  
	    <id property="goodsId" column="goodsId"/>
      	<result property="cateId" column="cateId"/>
      	<result property="goodsName" column="goodsName"/>
      	<result property="goodsDisc" column="goodsDisc"/>
      	<result property="goodsPrice" column="goodsPrice"/>
      	<result property="goodsDiscount" column="goodsDiscount"/>
      	<result property="goodsStock" column="goodsStock"/>
      	<result property="goodsOrigin" column="goodsOrigin"/>
      	<result property="goodsMaterial" column="goodsMaterial"/>
      	<result property="goodsPostalfee" column="goodsPostalfee"/>
      	<result property="goodsDate" column="goodsDate"/>
      	<result property="goodsSales" column="goodsSales"/>
      	<result property="goodsPic" column="goodsPic"/>
      	
      	<!-- Goods与Pic一对多关系 -->
      	<collection property="pics" ofType="Pic">
      	    <id property="picId" column="picIds"/>
      	    <result property="goodsId" column="goodsIds"/>
        	<result property="picUrl" column="goodsPics"/>
      	</collection>
      	<!-- Goods与Size一对多关系 -->
      	<collection property="sizes" ofType="Size">
      	    <id property="sizeId" column="sizeId"/>
      	    <result property="sizeName" column="sizeName"/>
      	</collection>
      	<!-- Goods与Color一对多关系 -->
      	<collection property="colors" ofType="Color">
      	    <id property="colorId" column="colorId"/>
      	    <result property="colorName" column="colorName"/>
      	</collection>
  	</resultMap>
    
    <select id="findGoodsDetailById" parameterType="int" resultMap="GoodsResultMap">
		select g.goods_id goodsId,cate_id cateId,goods_name goodsName,goods_disc goodsDisc,goods_price goodsPrice,
		goods_discount goodsDiscount,goods_stock goodsStock,goods_origin goodsOrigin,goods_material goodsMaterial,
		goods_postalfee goodsPostalfee,goods_date goodsDate,goods_sales goodsSales,goods_pic goodsPic,p.pic_url goodsPics,p.pic_id picIds		
		from t_goods g left join t_pic p 
		on g.goods_id=p.goods_id 
		where g.goods_id=#{goodsId}
	</select>
	<select id="findGoodsSizesById" parameterType="int" resultMap="GoodsResultMap">
	    select g.goods_id goodsId,s.size_id sizeId,s.size_name sizeName
	    from t_goods g 
	    left join r_goodssize gs on g.goods_id=gs.goods_id
		left join t_size s on gs.size_id=s.size_id
		where g.goods_id=#{goodsId}
	</select>
	<select id="findGoodsColorsById" parameterType="int" resultMap="GoodsResultMap">
	    select g.goods_id goodsId,c.color_id colorId,c.color_name colorName
	    from t_goods g
		left join r_goodscolor gc on g.goods_id=gc.goods_id
		left join t_color c on gc.color_id=c.color_id
		where g.goods_id=#{goodsId}
	</select>
	<select id="findGoodsListByCate" resultType="Goods">
	    select goods_id goodsId,cate_id cateId,goods_name goodsName,goods_price goodsPrice,goods_discount goodsDiscount,
	    goods_postalfee goodsPostalfee,goods_disc goodsDisc,goods_origin goodsOrigin,goods_material goodsMaterial,
        goods_date goodsDate,goods_sales goodsSales,goods_stock goodsStock,goods_pic goodsPic from t_goods where cate_id=#{cateId}
	</select>
	<select id="findGoodsListByKeyword" resultType="Goods">
	    select goods_id goodsId,cate_id cateId,goods_name goodsName,goods_price goodsPrice,goods_discount goodsDiscount,
	    goods_postalfee goodsPostalfee,goods_disc goodsDisc,goods_origin goodsOrigin,goods_material goodsMaterial,
        goods_date goodsDate,goods_sales goodsSales,goods_stock goodsStock,goods_pic goodsPic
		from t_goods 
		<where>	    
		    goods_name like CONCAT('%', #{params.keyword}, '%') 
	    </where>
	</select>
	
	<select id="findAllGoods" resultType="Goods">
		select goods_id goodsId,cate_id cateId,goods_name goodsName,goods_price goodsPrice,
		goods_discount goodsDiscount,goods_stock goodsStock,goods_date goodsDate,goods_sales goodsSales,goods_pic goodsPic 
		from t_goods 
	</select>
	
	<select id="getStocksByGoodsId" resultType="Stock">
		SELECT stock_id stockId, t_stock.goods_id goodsId,goods_name goodsName,size_name sizeName,color_name colorName
		,stock_num stockNum,sales_num salesNum from t_stock,t_goods WHERE t_stock.goods_id =t_goods.goods_id and t_stock.goods_id=#{goodsId}
	</select>
	
	<update id="updateStock">
		update t_stock set stock_num = #{1} where stock_id =#{0}
	</update>
	
	<update id="updateGoodsStock">
		update t_goods set goods_stock =#{1} where goods_id =#{0}
	</update>
	
	<insert id="addGoods" parameterType="Goods">
		insert into t_goods (goods_id,cate_id,goods_name,goods_disc,goods_price,goods_discount,goods_origin,goods_material,goods_postalfee,goods_pic,goods_date,goods_stock,goods_sales)
		values(null,#{cateId},#{goodsName},#{goodsDisc},#{goodsPrice}, #{goodsDiscount},#{goodsOrigin},#{goodsMaterial},#{goodsPostalfee},#{goodsPic},#{goodsDate},0,0)
	</insert>
</mapper>